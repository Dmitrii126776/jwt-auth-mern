{"ast":null,"code":"import axios from 'axios';\nexport const API_URL = `http://localhost:5000/api`;\nconst $api = axios.create({\n  withCredentials: true,\n  baseURL: API_URL\n});\n$api.interceptors.request.use(config => {\n  config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n  return config;\n});\n\n// $api.interceptors.response.use((config) => {\n//     return config;\n// },async (error) => {\n//     const originalRequest = error.config;\n//     if (error.response.status === 401 && error.config && !error.config._isRetry) {\n//         originalRequest._isRetry = true;\n//         try {\n//             const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\n//             localStorage.setItem('token', response.data.accessToken);\n//             return $api.request(originalRequest);\n//         } catch (e) {\n//             console.log('НЕ АВТОРИЗОВАН')\n//         }\n//     }\n//     throw error;\n// })\n\nexport default $api;","map":{"version":3,"names":["axios","API_URL","$api","create","withCredentials","baseURL","interceptors","request","use","config","headers","Authorization","localStorage","getItem"],"sources":["C:/Users/Dmitrii/WebstormProjects/jwt-auth-mern/client/src/http/index.ts"],"sourcesContent":["import axios from 'axios';\r\nimport {store} from \"../index\";\r\nimport {AuthResponse} from \"../models/response/AuthResponse\";\r\nimport {IUser} from \"../models/IUser\";\r\n\r\nexport const API_URL = `http://localhost:5000/api`\r\n\r\nconst $api = axios.create({\r\n    withCredentials: true,\r\n    baseURL: API_URL\r\n})\r\n\r\n$api.interceptors.request.use((config) => {\r\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\r\n    return config;\r\n})\r\n\r\n// $api.interceptors.response.use((config) => {\r\n//     return config;\r\n// },async (error) => {\r\n//     const originalRequest = error.config;\r\n//     if (error.response.status === 401 && error.config && !error.config._isRetry) {\r\n//         originalRequest._isRetry = true;\r\n//         try {\r\n//             const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\r\n//             localStorage.setItem('token', response.data.accessToken);\r\n//             return $api.request(originalRequest);\r\n//         } catch (e) {\r\n//             console.log('НЕ АВТОРИЗОВАН')\r\n//         }\r\n//     }\r\n//     throw error;\r\n// })\r\n\r\nexport default $api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAKzB,OAAO,MAAMC,OAAO,GAAI,2BAA0B;AAElD,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM,CAAC;EACtBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAEJ;AACb,CAAC,CAAC;AAEFC,IAAI,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACtCA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAI,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC;EACxE,OAAOJ,MAAM;AACjB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeP,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}